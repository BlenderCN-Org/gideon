module foo {

  int my_func(float x) {
    return 0;
  }

  module another_module {
   
    module yam {

      vec2 my_other_global;
 
    }

    void hidden_func(float x) { return; }

    bool super_awesome_variable;
    void call_me_maybe() { string s = "hi"; }
  }

  int my_other_global;
  
  distribution my_bsdf() {
    vec4 evaluate(vec3 N, vec3 P_in, vec3 w_in,
		  vec3 P_out, vec3 w_out) {
      return vec4(N.x, N.y, N.z, 1.0);
    }
  }

  module shaders {
    distribution my_bsdf(float x) {
      vec4 evaluate(vec3 N, vec3 P_in, vec3 w_in,
		    vec3 P_out, vec3 w_out) {
	return vec4(x, N.y, N.z, 1.0);
      }
    }
  }

  float my_global;

  module bar {
    import another_module;
    import another_module.yam;

    float hello() { return 3.5 + my_global; }
    int world() {
      dfunc d = my_bsdf();
      dfunc d2 = shaders.my_bsdf(7.69);
      
      another_module.yam.my_other_global.x = 4.5 + my_other_global.y;
      return my_func(another_module.yam.my_other_global.y);
    }

    bool get_boolean() {      
      //i can also call functions
      call_me_maybe();
      another_module.call_me_maybe();
      
      return super_awesome_variable;
    }
  }
  
  void test2() { another_module.hidden_func(my_global); }
}

module bar {

  import foo;

  float main() {
    return another_module.yam.my_other_global.y;
  }

}
